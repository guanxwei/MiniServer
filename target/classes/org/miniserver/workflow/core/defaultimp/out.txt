Classfile /Users/guanxwei/workspace/personal/MiniServerMaven/target/classes/org/miniserver/workflow/core/defaultimp/MemoryWorkflow.class
  Last modified Apr 12, 2016; size 3039 bytes
  MD5 checksum ba060cde1d61877821d4fb97396a2c2e
  Compiled from "MemoryWorkflow.java"
public class org.miniserver.workflow.core.defaultimp.MemoryWorkflow implements org.miniserver.workflow.core.Workflow
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Class              #2             // org/miniserver/workflow/core/defaultimp/MemoryWorkflow
   #2 = Utf8               org/miniserver/workflow/core/defaultimp/MemoryWorkflow
   #3 = Class              #4             // java/lang/Object
   #4 = Utf8               java/lang/Object
   #5 = Class              #6             // org/miniserver/workflow/core/Workflow
   #6 = Utf8               org/miniserver/workflow/core/Workflow
   #7 = Utf8               NAME
   #8 = Utf8               Ljava/lang/String;
   #9 = Utf8               ConstantValue
  #10 = String             #11            // MINI:WORKFLOW:DEFAULT:IMPLEMENTATION:1.0
  #11 = Utf8               MINI:WORKFLOW:DEFAULT:IMPLEMENTATION:1.0
  #12 = Utf8               context
  #13 = Utf8               Lorg/miniserver/workflow/core/NodeContext;
  #14 = Utf8               basicNode
  #15 = Utf8               Lorg/miniserver/workflow/core/Node;
  #16 = Utf8               nodes
  #17 = Utf8               [Lorg/miniserver/workflow/core/Node;
  #18 = Utf8               started
  #19 = Utf8               Z
  #20 = Utf8               <init>
  #21 = Utf8               (Lorg/miniserver/workflow/core/NodeContext;)V
  #22 = Utf8               Code
  #23 = Methodref          #3.#24         // java/lang/Object."<init>":()V
  #24 = NameAndType        #20:#25        // "<init>":()V
  #25 = Utf8               ()V
  #26 = Fieldref           #1.#27         // org/miniserver/workflow/core/defaultimp/MemoryWorkflow.context:Lorg/miniserver/workflow/core/NodeContext;
  #27 = NameAndType        #12:#13        // context:Lorg/miniserver/workflow/core/NodeContext;
  #28 = Utf8               LineNumberTable
  #29 = Utf8               LocalVariableTable
  #30 = Utf8               this
  #31 = Utf8               Lorg/miniserver/workflow/core/defaultimp/MemoryWorkflow;
  #32 = Utf8               getName
  #33 = Utf8               ()Ljava/lang/String;
  #34 = Utf8               setContext
  #35 = Utf8               getContext
  #36 = Utf8               ()Lorg/miniserver/workflow/core/NodeContext;
  #37 = Utf8               setBasicNode
  #38 = Utf8               (Lorg/miniserver/workflow/core/Node;)V
  #39 = Fieldref           #1.#40         // org/miniserver/workflow/core/defaultimp/MemoryWorkflow.basicNode:Lorg/miniserver/workflow/core/Node;
  #40 = NameAndType        #14:#15        // basicNode:Lorg/miniserver/workflow/core/Node;
  #41 = Methodref          #1.#42         // org/miniserver/workflow/core/defaultimp/MemoryWorkflow.getContext:()Lorg/miniserver/workflow/core/NodeContext;
  #42 = NameAndType        #35:#36        // getContext:()Lorg/miniserver/workflow/core/NodeContext;
  #43 = InterfaceMethodref #44.#46        // org/miniserver/workflow/core/Node.setContext:(Lorg/miniserver/workflow/core/NodeContext;)V
  #44 = Class              #45            // org/miniserver/workflow/core/Node
  #45 = Utf8               org/miniserver/workflow/core/Node
  #46 = NameAndType        #34:#21        // setContext:(Lorg/miniserver/workflow/core/NodeContext;)V
  #47 = Utf8               addNode
  #48 = Fieldref           #1.#49         // org/miniserver/workflow/core/defaultimp/MemoryWorkflow.nodes:[Lorg/miniserver/workflow/core/Node;
  #49 = NameAndType        #16:#17        // nodes:[Lorg/miniserver/workflow/core/Node;
  #50 = Methodref          #51.#53        // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
  #51 = Class              #52            // java/lang/System
  #52 = Utf8               java/lang/System
  #53 = NameAndType        #54:#55        // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
  #54 = Utf8               arraycopy
  #55 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V
  #56 = Utf8               node
  #57 = Utf8               newNodes
  #58 = Utf8               StackMapTable
  #59 = Utf8               removeNode
  #60 = Utf8               Exceptions
  #61 = Class              #62            // org/miniserver/workflow/exceptions/WorkflowException
  #62 = Utf8               org/miniserver/workflow/exceptions/WorkflowException
  #63 = String             #64            // There is no node in the workflow now
  #64 = Utf8               There is no node in the workflow now
  #65 = Methodref          #61.#66        // org/miniserver/workflow/exceptions/WorkflowException."<init>":(Ljava/lang/String;)V
  #66 = NameAndType        #20:#67        // "<init>":(Ljava/lang/String;)V
  #67 = Utf8               (Ljava/lang/String;)V
  #68 = Utf8               findNodes
  #69 = Utf8               ()[Lorg/miniserver/workflow/core/Node;
  #70 = Utf8               copy
  #71 = Utf8               (Lorg/miniserver/workflow/core/Workflow;)V
  #72 = InterfaceMethodref #5.#73         // org/miniserver/workflow/core/Workflow.findNodes:()[Lorg/miniserver/workflow/core/Node;
  #73 = NameAndType        #68:#69        // findNodes:()[Lorg/miniserver/workflow/core/Node;
  #74 = InterfaceMethodref #5.#42         // org/miniserver/workflow/core/Workflow.getContext:()Lorg/miniserver/workflow/core/NodeContext;
  #75 = Utf8               originalWorkflow
  #76 = Utf8               Lorg/miniserver/workflow/core/Workflow;
  #77 = Utf8               invoke
  #78 = Utf8               (Lorg/miniserver/workflow/io/Anything;Lorg/miniserver/workflow/io/Anything;)V
  #79 = Fieldref           #1.#80         // org/miniserver/workflow/core/defaultimp/MemoryWorkflow.started:Z
  #80 = NameAndType        #18:#19        // started:Z
  #81 = String             #82            // Workflow has not been started, please start the workflow before invoke it
  #82 = Utf8               Workflow has not been started, please start the workflow before invoke it
  #83 = InterfaceMethodref #44.#84        // org/miniserver/workflow/core/Node.handleRequest:(Lorg/miniserver/workflow/io/Anything;Lorg/miniserver/workflow/io/Anything;Lorg/miniserver/workflow/core/NodeContext;)V
  #84 = NameAndType        #85:#86        // handleRequest:(Lorg/miniserver/workflow/io/Anything;Lorg/miniserver/workflow/io/Anything;Lorg/miniserver/workflow/core/NodeContext;)V
  #85 = Utf8               handleRequest
  #86 = Utf8               (Lorg/miniserver/workflow/io/Anything;Lorg/miniserver/workflow/io/Anything;Lorg/miniserver/workflow/core/NodeContext;)V
  #87 = Utf8               request
  #88 = Utf8               Lorg/miniserver/workflow/io/Anything;
  #89 = Utf8               response
  #90 = Utf8               starter
  #91 = Utf8               start
  #92 = String             #93            // The workflow has been started!
  #93 = Utf8               The workflow has been started!
  #94 = Utf8               SourceFile
  #95 = Utf8               MemoryWorkflow.java
{
  public org.miniserver.workflow.core.defaultimp.MemoryWorkflow(org.miniserver.workflow.core.NodeContext);
    descriptor: (Lorg/miniserver/workflow/core/NodeContext;)V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #23                 // Method java/lang/Object."<init>":()V
         4: aload_0
         5: aload_1
         6: putfield      #26                 // Field context:Lorg/miniserver/workflow/core/NodeContext;
         9: return
      LineNumberTable:
        line 18: 0
        line 19: 4
        line 20: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/miniserver/workflow/core/defaultimp/MemoryWorkflow;
            0      10     1 context   Lorg/miniserver/workflow/core/NodeContext;

  public java.lang.String getName();
    descriptor: ()Ljava/lang/String;
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #10                 // String MINI:WORKFLOW:DEFAULT:IMPLEMENTATION:1.0
         2: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lorg/miniserver/workflow/core/defaultimp/MemoryWorkflow;

  public void setContext(org.miniserver.workflow.core.NodeContext);
    descriptor: (Lorg/miniserver/workflow/core/NodeContext;)V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #26                 // Field context:Lorg/miniserver/workflow/core/NodeContext;
         5: return
      LineNumberTable:
        line 29: 0
        line 30: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/miniserver/workflow/core/defaultimp/MemoryWorkflow;
            0       6     1 context   Lorg/miniserver/workflow/core/NodeContext;

  public org.miniserver.workflow.core.NodeContext getContext();
    descriptor: ()Lorg/miniserver/workflow/core/NodeContext;
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #26                 // Field context:Lorg/miniserver/workflow/core/NodeContext;
         4: areturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/miniserver/workflow/core/defaultimp/MemoryWorkflow;

  public void setBasicNode(org.miniserver.workflow.core.Node);
    descriptor: (Lorg/miniserver/workflow/core/Node;)V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #39                 // Field basicNode:Lorg/miniserver/workflow/core/Node;
         5: aload_0
         6: getfield      #39                 // Field basicNode:Lorg/miniserver/workflow/core/Node;
         9: aload_0
        10: invokevirtual #41                 // Method getContext:()Lorg/miniserver/workflow/core/NodeContext;
        13: invokeinterface #43,  2           // InterfaceMethod org/miniserver/workflow/core/Node.setContext:(Lorg/miniserver/workflow/core/NodeContext;)V
        18: return
      LineNumberTable:
        line 39: 0
        line 40: 5
        line 41: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/miniserver/workflow/core/defaultimp/MemoryWorkflow;
            0      19     1 basicNode   Lorg/miniserver/workflow/core/Node;

  public void addNode(org.miniserver.workflow.core.Node);
    descriptor: (Lorg/miniserver/workflow/core/Node;)V
    flags: ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: aload_0
         1: getfield      #48                 // Field nodes:[Lorg/miniserver/workflow/core/Node;
         4: ifnonnull     15
         7: aload_0
         8: iconst_0
         9: anewarray     #44                 // class org/miniserver/workflow/core/Node
        12: putfield      #48                 // Field nodes:[Lorg/miniserver/workflow/core/Node;
        15: aload_0
        16: getfield      #48                 // Field nodes:[Lorg/miniserver/workflow/core/Node;
        19: arraylength
        20: iconst_1
        21: iadd
        22: anewarray     #44                 // class org/miniserver/workflow/core/Node
        25: astore_2
        26: aload_0
        27: getfield      #48                 // Field nodes:[Lorg/miniserver/workflow/core/Node;
        30: iconst_0
        31: aload_2
        32: iconst_0
        33: aload_0
        34: getfield      #48                 // Field nodes:[Lorg/miniserver/workflow/core/Node;
        37: arraylength
        38: invokestatic  #50                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
        41: aload_2
        42: aload_0
        43: getfield      #48                 // Field nodes:[Lorg/miniserver/workflow/core/Node;
        46: arraylength
        47: aload_1
        48: aastore
        49: aload_0
        50: aload_2
        51: putfield      #48                 // Field nodes:[Lorg/miniserver/workflow/core/Node;
        54: aload_1
        55: aload_0
        56: invokevirtual #41                 // Method getContext:()Lorg/miniserver/workflow/core/NodeContext;
        59: invokeinterface #43,  2           // InterfaceMethod org/miniserver/workflow/core/Node.setContext:(Lorg/miniserver/workflow/core/NodeContext;)V
        64: return
      LineNumberTable:
        line 45: 0
        line 46: 7
        line 48: 15
        line 49: 26
        line 50: 41
        line 51: 49
        line 52: 54
        line 53: 64
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      65     0  this   Lorg/miniserver/workflow/core/defaultimp/MemoryWorkflow;
            0      65     1  node   Lorg/miniserver/workflow/core/Node;
           26      39     2 newNodes   [Lorg/miniserver/workflow/core/Node;
      StackMapTable: number_of_entries = 1
        frame_type = 15 /* same */

  public void removeNode(org.miniserver.workflow.core.Node) throws org.miniserver.workflow.exceptions.WorkflowException;
    descriptor: (Lorg/miniserver/workflow/core/Node;)V
    flags: ACC_PUBLIC
    Exceptions:
      throws org.miniserver.workflow.exceptions.WorkflowException
    Code:
      stack=6, locals=3, args_size=2
         0: aload_0
         1: getfield      #48                 // Field nodes:[Lorg/miniserver/workflow/core/Node;
         4: arraylength
         5: ifgt          18
         8: new           #61                 // class org/miniserver/workflow/exceptions/WorkflowException
        11: dup
        12: ldc           #63                 // String There is no node in the workflow now
        14: invokespecial #65                 // Method org/miniserver/workflow/exceptions/WorkflowException."<init>":(Ljava/lang/String;)V
        17: athrow
        18: aload_0
        19: getfield      #48                 // Field nodes:[Lorg/miniserver/workflow/core/Node;
        22: arraylength
        23: iconst_1
        24: isub
        25: anewarray     #44                 // class org/miniserver/workflow/core/Node
        28: astore_2
        29: aload_0
        30: getfield      #48                 // Field nodes:[Lorg/miniserver/workflow/core/Node;
        33: iconst_0
        34: aload_2
        35: iconst_0
        36: aload_0
        37: getfield      #48                 // Field nodes:[Lorg/miniserver/workflow/core/Node;
        40: arraylength
        41: iconst_1
        42: isub
        43: invokestatic  #50                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
        46: aload_0
        47: aload_2
        48: putfield      #48                 // Field nodes:[Lorg/miniserver/workflow/core/Node;
        51: return
      LineNumberTable:
        line 57: 0
        line 58: 8
        line 61: 18
        line 62: 29
        line 63: 46
        line 64: 51
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      52     0  this   Lorg/miniserver/workflow/core/defaultimp/MemoryWorkflow;
            0      52     1  node   Lorg/miniserver/workflow/core/Node;
           29      23     2 newNodes   [Lorg/miniserver/workflow/core/Node;
      StackMapTable: number_of_entries = 1
        frame_type = 18 /* same */

  public org.miniserver.workflow.core.Node[] findNodes();
    descriptor: ()[Lorg/miniserver/workflow/core/Node;
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #48                 // Field nodes:[Lorg/miniserver/workflow/core/Node;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/miniserver/workflow/core/defaultimp/MemoryWorkflow;

  public void copy(org.miniserver.workflow.core.Workflow);
    descriptor: (Lorg/miniserver/workflow/core/Workflow;)V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokeinterface #72,  1           // InterfaceMethod org/miniserver/workflow/core/Workflow.findNodes:()[Lorg/miniserver/workflow/core/Node;
         7: putfield      #48                 // Field nodes:[Lorg/miniserver/workflow/core/Node;
        10: aload_0
        11: aload_1
        12: invokeinterface #74,  1           // InterfaceMethod org/miniserver/workflow/core/Workflow.getContext:()Lorg/miniserver/workflow/core/NodeContext;
        17: putfield      #26                 // Field context:Lorg/miniserver/workflow/core/NodeContext;
        20: return
      LineNumberTable:
        line 73: 0
        line 74: 10
        line 75: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/miniserver/workflow/core/defaultimp/MemoryWorkflow;
            0      21     1 originalWorkflow   Lorg/miniserver/workflow/core/Workflow;

  public void invoke(org.miniserver.workflow.io.Anything, org.miniserver.workflow.io.Anything) throws org.miniserver.workflow.exceptions.WorkflowException;
    descriptor: (Lorg/miniserver/workflow/io/Anything;Lorg/miniserver/workflow/io/Anything;)V
    flags: ACC_PUBLIC
    Exceptions:
      throws org.miniserver.workflow.exceptions.WorkflowException
    Code:
      stack=4, locals=4, args_size=3
         0: aload_0
         1: getfield      #79                 // Field started:Z
         4: ifne          17
         7: new           #61                 // class org/miniserver/workflow/exceptions/WorkflowException
        10: dup
        11: ldc           #81                 // String Workflow has not been started, please start the workflow before invoke it
        13: invokespecial #65                 // Method org/miniserver/workflow/exceptions/WorkflowException."<init>":(Ljava/lang/String;)V
        16: athrow
        17: aload_0
        18: getfield      #39                 // Field basicNode:Lorg/miniserver/workflow/core/Node;
        21: ifnull        36
        24: aload_0
        25: getfield      #39                 // Field basicNode:Lorg/miniserver/workflow/core/Node;
        28: aload_1
        29: aload_2
        30: aconst_null
        31: invokeinterface #83,  4           // InterfaceMethod org/miniserver/workflow/core/Node.handleRequest:(Lorg/miniserver/workflow/io/Anything;Lorg/miniserver/workflow/io/Anything;Lorg/miniserver/workflow/core/NodeContext;)V
        36: aload_0
        37: getfield      #48                 // Field nodes:[Lorg/miniserver/workflow/core/Node;
        40: ifnull        70
        43: aload_0
        44: getfield      #48                 // Field nodes:[Lorg/miniserver/workflow/core/Node;
        47: arraylength
        48: ifle          70
        51: aload_0
        52: getfield      #48                 // Field nodes:[Lorg/miniserver/workflow/core/Node;
        55: iconst_0
        56: aaload
        57: astore_3
        58: aload_3
        59: aload_1
        60: aload_2
        61: aload_0
        62: getfield      #26                 // Field context:Lorg/miniserver/workflow/core/NodeContext;
        65: invokeinterface #83,  4           // InterfaceMethod org/miniserver/workflow/core/Node.handleRequest:(Lorg/miniserver/workflow/io/Anything;Lorg/miniserver/workflow/io/Anything;Lorg/miniserver/workflow/core/NodeContext;)V
        70: return
      LineNumberTable:
        line 79: 0
        line 80: 7
        line 83: 17
        line 84: 24
        line 87: 36
        line 88: 51
        line 89: 58
        line 92: 70
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0  this   Lorg/miniserver/workflow/core/defaultimp/MemoryWorkflow;
            0      71     1 request   Lorg/miniserver/workflow/io/Anything;
            0      71     2 response   Lorg/miniserver/workflow/io/Anything;
           58      12     3 starter   Lorg/miniserver/workflow/core/Node;
      StackMapTable: number_of_entries = 3
        frame_type = 17 /* same */
        frame_type = 18 /* same */
        frame_type = 33 /* same */

  public void start() throws org.miniserver.workflow.exceptions.WorkflowException;
    descriptor: ()V
    flags: ACC_PUBLIC
    Exceptions:
      throws org.miniserver.workflow.exceptions.WorkflowException
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getfield      #79                 // Field started:Z
         4: ifeq          17
         7: new           #61                 // class org/miniserver/workflow/exceptions/WorkflowException
        10: dup
        11: ldc           #92                 // String The workflow has been started!
        13: invokespecial #65                 // Method org/miniserver/workflow/exceptions/WorkflowException."<init>":(Ljava/lang/String;)V
        16: athrow
        17: aload_0
        18: iconst_1
        19: putfield      #79                 // Field started:Z
        22: return
      LineNumberTable:
        line 96: 0
        line 97: 7
        line 100: 17
        line 101: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/miniserver/workflow/core/defaultimp/MemoryWorkflow;
      StackMapTable: number_of_entries = 1
        frame_type = 17 /* same */
}
SourceFile: "MemoryWorkflow.java"
